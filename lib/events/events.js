/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _listeners;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _classesEventEmitter = require('./classes/EventEmitter');

var _classesEventEmitter2 = _interopRequireDefault(_classesEventEmitter);

var _classesHandlesAnnouncements = require('./classes/HandlesAnnouncements');

var _classesHandlesAnnouncements2 = _interopRequireDefault(_classesHandlesAnnouncements);

var _classesHandlesChat = require('./classes/HandlesChat');

var _classesHandlesChat2 = _interopRequireDefault(_classesHandlesChat);

var _classesHandlesCharacter = require('./classes/HandlesCharacter');

var _classesHandlesCharacter2 = _interopRequireDefault(_classesHandlesCharacter);

var _classesHandlesEnemyTarget = require('./classes/HandlesEnemyTarget');

var _classesHandlesEnemyTarget2 = _interopRequireDefault(_classesHandlesEnemyTarget);

var _classesHandlesFriendlyTarget = require('./classes/HandlesFriendlyTarget');

var _classesHandlesFriendlyTarget2 = _interopRequireDefault(_classesHandlesFriendlyTarget);

var _classesHandlesControlGame = require('./classes/HandlesControlGame');

var _classesHandlesControlGame2 = _interopRequireDefault(_classesHandlesControlGame);

var _classesHandlesControlGameScore = require('./classes/HandlesControlGameScore');

var _classesHandlesControlGameScore2 = _interopRequireDefault(_classesHandlesControlGameScore);

var _listenersInit = require('./listeners/Init');

var _listenersInit2 = _interopRequireDefault(_listenersInit);

var _listenersAnnouncements = require('./listeners/Announcements');

var _listenersAnnouncements2 = _interopRequireDefault(_listenersAnnouncements);

var _listenersChat = require('./listeners/Chat');

var _listenersChat2 = _interopRequireDefault(_listenersChat);

var _listenersCharacter = require('./listeners/Character');

var _listenersCharacter2 = _interopRequireDefault(_listenersCharacter);

var _listenersEnemyTarget = require('./listeners/EnemyTarget');

var _listenersEnemyTarget2 = _interopRequireDefault(_listenersEnemyTarget);

var _listenersFriendlyTarget = require('./listeners/FriendlyTarget');

var _listenersFriendlyTarget2 = _interopRequireDefault(_listenersFriendlyTarget);

var _listenersControlGame = require('./listeners/ControlGame');

var _listenersControlGame2 = _interopRequireDefault(_listenersControlGame);

var _listenersControlGameScore = require('./listeners/ControlGameScore');

var _listenersControlGameScore2 = _interopRequireDefault(_listenersControlGameScore);

// Handle* objects.  These define both the event name, and the Reflux action used
// to trigger the stores (TODO: This latter part is not working)
var handlesAnnouncements = new _classesHandlesAnnouncements2['default']();
var handlesChat = new _classesHandlesChat2['default']();
var handlesCharacter = new _classesHandlesCharacter2['default']();
var handlesEnemyTarget = new _classesHandlesEnemyTarget2['default']();
var handlesFriendlyTarget = new _classesHandlesFriendlyTarget2['default']();
var handlesControlGame = new _classesHandlesControlGame2['default']();
var handlesControlGameScore = new _classesHandlesControlGameScore2['default']();
// Listeners
var listeners = (_listeners = {
    'init': new _listenersInit2['default']()
}, _defineProperty(_listeners, handlesAnnouncements.topic, new _listenersAnnouncements2['default'](handlesAnnouncements)), _defineProperty(_listeners, handlesChat.topic, new _listenersChat2['default'](handlesChat)), _defineProperty(_listeners, handlesCharacter.topic, new _listenersCharacter2['default'](handlesCharacter)), _defineProperty(_listeners, handlesEnemyTarget.topic, new _listenersEnemyTarget2['default'](handlesEnemyTarget)), _defineProperty(_listeners, handlesFriendlyTarget.topic, new _listenersFriendlyTarget2['default'](handlesFriendlyTarget)), _defineProperty(_listeners, handlesControlGame.topic, new _listenersControlGame2['default'](handlesControlGame)), _defineProperty(_listeners, handlesControlGameScore.topic, new _listenersControlGameScore2['default'](handlesControlGameScore)), _listeners);
// Event Emitter.  A single instance of event emitter handles all cu-events events
var emitter = new _classesEventEmitter2['default']();
// register for an event group
function on(topic, callback) {
    var listener = listeners[topic];
    if (listener) {
        var handle = emitter.addListener(topic, listener.once, callback);
        // Start the listener.  The start() method will handle multiple
        // starts.  In some cases, the listener does need kickstarting
        // each time, in other cases, not.
        listener.start(emitter);
        return handle;
    }
}
function off(listener) {
    emitter.removeListener(listener);
}
function addListener(topic, callback) {
    on(topic, callback);
}
function removeListener(listener) {
    off(listener);
}
exports['default'] = {
    handlesAnnouncements: handlesAnnouncements,
    handlesChat: handlesChat,
    handlesCharacter: handlesCharacter,
    handlesEnemyTarget: handlesEnemyTarget,
    handlesFriendlyTarget: handlesFriendlyTarget,
    handlesControlGame: handlesControlGame,
    handlesControlGameScore: handlesControlGameScore,
    on: on,
    off: off,
    addListener: addListener,
    removeListener: removeListener
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy9ldmVudHMudHMiXSwibmFtZXMiOlsib24iLCJvZmYiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OzttQ0FNeUIsd0JBQXdCOzs7OzJDQUVoQixnQ0FBZ0M7Ozs7a0NBQ3pDLHVCQUF1Qjs7Ozt1Q0FDbEIsNEJBQTRCOzs7O3lDQUMxQiw4QkFBOEI7Ozs7NENBQzNCLGlDQUFpQzs7Ozt5Q0FDcEMsOEJBQThCOzs7OzhDQUN6QixtQ0FBbUM7Ozs7NkJBRTlDLGtCQUFrQjs7OztzQ0FDVCwyQkFBMkI7Ozs7NkJBQ3BDLGtCQUFrQjs7OztrQ0FDYix1QkFBdUI7Ozs7b0NBQ3JCLHlCQUF5Qjs7Ozt1Q0FDdEIsNEJBQTRCOzs7O29DQUMvQix5QkFBeUI7Ozs7eUNBQ3BCLDhCQUE4Qjs7Ozs7O0FBSW5FLElBQU0sb0JBQW9CLEdBQXlCLDhDQUEwQixDQUFDO0FBQzlFLElBQU0sV0FBVyxHQUFnQixxQ0FBaUIsQ0FBQztBQUNuRCxJQUFNLGdCQUFnQixHQUFxQiwwQ0FBc0IsQ0FBQztBQUNsRSxJQUFNLGtCQUFrQixHQUF1Qiw0Q0FBd0IsQ0FBQztBQUN4RSxJQUFNLHFCQUFxQixHQUEwQiwrQ0FBMkIsQ0FBQztBQUNqRixJQUFNLGtCQUFrQixHQUF1Qiw0Q0FBd0IsQ0FBQztBQUN4RSxJQUFNLHVCQUF1QixHQUE0QixpREFBNkIsQ0FBQzs7QUFHdkYsSUFBTSxTQUFTO0FBQ2IsVUFBTSxFQUFFLGdDQUFrQjsrQkFDekIsb0JBQW9CLENBQUMsS0FBSyxFQUFHLHdDQUEwQixvQkFBb0IsQ0FBQywrQkFDNUUsV0FBVyxDQUFDLEtBQUssRUFBRywrQkFBaUIsV0FBVyxDQUFDLCtCQUNqRCxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUcsb0NBQXNCLGdCQUFnQixDQUFDLCtCQUNoRSxrQkFBa0IsQ0FBQyxLQUFLLEVBQUcsc0NBQXdCLGtCQUFrQixDQUFDLCtCQUN0RSxxQkFBcUIsQ0FBQyxLQUFLLEVBQUcseUNBQTJCLHFCQUFxQixDQUFDLCtCQUMvRSxrQkFBa0IsQ0FBQyxLQUFLLEVBQUcsc0NBQXdCLGtCQUFrQixDQUFDLCtCQUN0RSx1QkFBdUIsQ0FBQyxLQUFLLEVBQUcsMkNBQTZCLHVCQUF1QixDQUFDLGNBQ3ZGLENBQUM7O0FBR0YsSUFBTSxPQUFPLEdBQWlCLHNDQUFrQixDQUFDOztBQUdqRCxTQUFBLEVBQUEsQ0FBWSxLQUFhLEVBQUUsUUFBNkIsRUFBQTtBQUN0REEsUUFBTUEsUUFBUUEsR0FBR0EsU0FBU0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7QUFDbENBLFFBQUlBLFFBQVFBLEVBQUVBO0FBQ1pBLFlBQU1BLE1BQU1BLEdBQUdBLE9BQU9BLENBQUNBLFdBQVdBLENBQUNBLEtBQUtBLEVBQUVBLFFBQVFBLENBQUNBLElBQUlBLEVBQUVBLFFBQVFBLENBQUNBLENBQUNBOzs7O0FBSW5FQSxnQkFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7QUFDeEJBLGVBQU9BLE1BQU1BLENBQUNBO0tBQ2ZBO0NBQ0ZBO0FBRUQsU0FBQSxHQUFBLENBQWEsUUFBYSxFQUFBO0FBQ3hCQyxXQUFPQSxDQUFDQSxjQUFjQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtDQUNsQ0E7QUFFRCxTQUFBLFdBQUEsQ0FBcUIsS0FBYSxFQUFFLFFBQTZCLEVBQUE7QUFDL0RDLE1BQUVBLENBQUNBLEtBQUtBLEVBQUVBLFFBQVFBLENBQUNBLENBQUNBO0NBQ3JCQTtBQUVELFNBQUEsY0FBQSxDQUF3QixRQUFhLEVBQUE7QUFDbkNDLE9BQUdBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO0NBQ2ZBO3FCQUVjO0FBQ2Isd0JBQW9CLEVBQXBCLG9CQUFvQjtBQUNwQixlQUFXLEVBQVgsV0FBVztBQUNYLG9CQUFnQixFQUFoQixnQkFBZ0I7QUFDaEIsc0JBQWtCLEVBQWxCLGtCQUFrQjtBQUNsQix5QkFBcUIsRUFBckIscUJBQXFCO0FBQ3JCLHNCQUFrQixFQUFsQixrQkFBa0I7QUFDbEIsMkJBQXVCLEVBQXZCLHVCQUF1QjtBQUN2QixNQUFFLEVBQUYsRUFBRTtBQUNGLE9BQUcsRUFBSCxHQUFHO0FBQ0gsZUFBVyxFQUFYLFdBQVc7QUFDWCxrQkFBYyxFQUFkLGNBQWM7Q0FDZiIsImZpbGUiOiJldmVudHMvZXZlbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cDovL21vemlsbGEub3JnL01QTC8yLjAvLlxuICovXG5cbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnLi9jbGFzc2VzL0V2ZW50RW1pdHRlcic7XG5cbmltcG9ydCBIYW5kbGVzQW5ub3VuY2VtZW50cyBmcm9tICcuL2NsYXNzZXMvSGFuZGxlc0Fubm91bmNlbWVudHMnO1xuaW1wb3J0IEhhbmRsZXNDaGF0IGZyb20gJy4vY2xhc3Nlcy9IYW5kbGVzQ2hhdCc7XG5pbXBvcnQgSGFuZGxlc0NoYXJhY3RlciBmcm9tICcuL2NsYXNzZXMvSGFuZGxlc0NoYXJhY3Rlcic7XG5pbXBvcnQgSGFuZGxlc0VuZW15VGFyZ2V0IGZyb20gJy4vY2xhc3Nlcy9IYW5kbGVzRW5lbXlUYXJnZXQnO1xuaW1wb3J0IEhhbmRsZXNGcmllbmRseVRhcmdldCBmcm9tICcuL2NsYXNzZXMvSGFuZGxlc0ZyaWVuZGx5VGFyZ2V0JztcbmltcG9ydCBIYW5kbGVzQ29udHJvbEdhbWUgZnJvbSAnLi9jbGFzc2VzL0hhbmRsZXNDb250cm9sR2FtZSc7XG5pbXBvcnQgSGFuZGxlc0NvbnRyb2xHYW1lU2NvcmUgZnJvbSAnLi9jbGFzc2VzL0hhbmRsZXNDb250cm9sR2FtZVNjb3JlJztcblxuaW1wb3J0IEluaXRMaXN0ZW5lciBmcm9tICcuL2xpc3RlbmVycy9Jbml0JztcbmltcG9ydCBBbm5vdW5jZW1lbnRzTGlzdGVuZXIgZnJvbSAnLi9saXN0ZW5lcnMvQW5ub3VuY2VtZW50cyc7XG5pbXBvcnQgQ2hhdExpc3RlbmVyIGZyb20gJy4vbGlzdGVuZXJzL0NoYXQnO1xuaW1wb3J0IENoYXJhY3Rlckxpc3RlbmVyIGZyb20gJy4vbGlzdGVuZXJzL0NoYXJhY3Rlcic7XG5pbXBvcnQgRW5lbXlUYXJnZXRMaXN0ZW5lciBmcm9tICcuL2xpc3RlbmVycy9FbmVteVRhcmdldCc7XG5pbXBvcnQgRnJpZW5kbHlUYXJnZXRMaXN0ZW5lciBmcm9tICcuL2xpc3RlbmVycy9GcmllbmRseVRhcmdldCc7XG5pbXBvcnQgQ29udHJvbEdhbWVMaXN0ZW5lciBmcm9tICcuL2xpc3RlbmVycy9Db250cm9sR2FtZSc7XG5pbXBvcnQgQ29udHJvbEdhbWVTY29yZUxpc3RlbmVyIGZyb20gJy4vbGlzdGVuZXJzL0NvbnRyb2xHYW1lU2NvcmUnO1xuXG4vLyBIYW5kbGUqIG9iamVjdHMuICBUaGVzZSBkZWZpbmUgYm90aCB0aGUgZXZlbnQgbmFtZSwgYW5kIHRoZSBSZWZsdXggYWN0aW9uIHVzZWRcbi8vIHRvIHRyaWdnZXIgdGhlIHN0b3JlcyAoVE9ETzogVGhpcyBsYXR0ZXIgcGFydCBpcyBub3Qgd29ya2luZylcbmNvbnN0IGhhbmRsZXNBbm5vdW5jZW1lbnRzOiBIYW5kbGVzQW5ub3VuY2VtZW50cyA9IG5ldyBIYW5kbGVzQW5ub3VuY2VtZW50cygpO1xuY29uc3QgaGFuZGxlc0NoYXQ6IEhhbmRsZXNDaGF0ID0gbmV3IEhhbmRsZXNDaGF0KCk7XG5jb25zdCBoYW5kbGVzQ2hhcmFjdGVyOiBIYW5kbGVzQ2hhcmFjdGVyID0gbmV3IEhhbmRsZXNDaGFyYWN0ZXIoKTtcbmNvbnN0IGhhbmRsZXNFbmVteVRhcmdldDogSGFuZGxlc0VuZW15VGFyZ2V0ID0gbmV3IEhhbmRsZXNFbmVteVRhcmdldCgpO1xuY29uc3QgaGFuZGxlc0ZyaWVuZGx5VGFyZ2V0OiBIYW5kbGVzRnJpZW5kbHlUYXJnZXQgPSBuZXcgSGFuZGxlc0ZyaWVuZGx5VGFyZ2V0KCk7XG5jb25zdCBoYW5kbGVzQ29udHJvbEdhbWU6IEhhbmRsZXNDb250cm9sR2FtZSA9IG5ldyBIYW5kbGVzQ29udHJvbEdhbWUoKTtcbmNvbnN0IGhhbmRsZXNDb250cm9sR2FtZVNjb3JlOiBIYW5kbGVzQ29udHJvbEdhbWVTY29yZSA9IG5ldyBIYW5kbGVzQ29udHJvbEdhbWVTY29yZSgpO1xuXG4vLyBMaXN0ZW5lcnNcbmNvbnN0IGxpc3RlbmVyczogYW55ID0ge1xuICAnaW5pdCc6IG5ldyBJbml0TGlzdGVuZXIoKSxcbiAgW2hhbmRsZXNBbm5vdW5jZW1lbnRzLnRvcGljXTogbmV3IEFubm91bmNlbWVudHNMaXN0ZW5lcihoYW5kbGVzQW5ub3VuY2VtZW50cyksXG4gIFtoYW5kbGVzQ2hhdC50b3BpY106IG5ldyBDaGF0TGlzdGVuZXIoaGFuZGxlc0NoYXQpLFxuICBbaGFuZGxlc0NoYXJhY3Rlci50b3BpY106IG5ldyBDaGFyYWN0ZXJMaXN0ZW5lcihoYW5kbGVzQ2hhcmFjdGVyKSxcbiAgW2hhbmRsZXNFbmVteVRhcmdldC50b3BpY106IG5ldyBFbmVteVRhcmdldExpc3RlbmVyKGhhbmRsZXNFbmVteVRhcmdldCksXG4gIFtoYW5kbGVzRnJpZW5kbHlUYXJnZXQudG9waWNdOiBuZXcgRnJpZW5kbHlUYXJnZXRMaXN0ZW5lcihoYW5kbGVzRnJpZW5kbHlUYXJnZXQpLFxuICBbaGFuZGxlc0NvbnRyb2xHYW1lLnRvcGljXTogbmV3IENvbnRyb2xHYW1lTGlzdGVuZXIoaGFuZGxlc0NvbnRyb2xHYW1lKSxcbiAgW2hhbmRsZXNDb250cm9sR2FtZVNjb3JlLnRvcGljXTogbmV3IENvbnRyb2xHYW1lU2NvcmVMaXN0ZW5lcihoYW5kbGVzQ29udHJvbEdhbWVTY29yZSlcbn07XG5cbi8vIEV2ZW50IEVtaXR0ZXIuICBBIHNpbmdsZSBpbnN0YW5jZSBvZiBldmVudCBlbWl0dGVyIGhhbmRsZXMgYWxsIGN1LWV2ZW50cyBldmVudHNcbmNvbnN0IGVtaXR0ZXI6IEV2ZW50RW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuLy8gcmVnaXN0ZXIgZm9yIGFuIGV2ZW50IGdyb3VwXG5mdW5jdGlvbiBvbih0b3BpYzogc3RyaW5nLCBjYWxsYmFjazogKGluZm86IGFueSkgPT4gdm9pZCk6IGFueSB7XG4gIGNvbnN0IGxpc3RlbmVyID0gbGlzdGVuZXJzW3RvcGljXTtcbiAgaWYgKGxpc3RlbmVyKSB7XG4gICAgY29uc3QgaGFuZGxlID0gZW1pdHRlci5hZGRMaXN0ZW5lcih0b3BpYywgbGlzdGVuZXIub25jZSwgY2FsbGJhY2spO1xuICAgIC8vIFN0YXJ0IHRoZSBsaXN0ZW5lci4gIFRoZSBzdGFydCgpIG1ldGhvZCB3aWxsIGhhbmRsZSBtdWx0aXBsZVxuICAgIC8vIHN0YXJ0cy4gIEluIHNvbWUgY2FzZXMsIHRoZSBsaXN0ZW5lciBkb2VzIG5lZWQga2lja3N0YXJ0aW5nXG4gICAgLy8gZWFjaCB0aW1lLCBpbiBvdGhlciBjYXNlcywgbm90LlxuICAgIGxpc3RlbmVyLnN0YXJ0KGVtaXR0ZXIpO1xuICAgIHJldHVybiBoYW5kbGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gb2ZmKGxpc3RlbmVyOiBhbnkpOiB2b2lkIHtcbiAgZW1pdHRlci5yZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcik7XG59XG5cbmZ1bmN0aW9uIGFkZExpc3RlbmVyKHRvcGljOiBzdHJpbmcsIGNhbGxiYWNrOiAoaW5mbzogYW55KSA9PiB2b2lkKTogdm9pZCB7XG4gIG9uKHRvcGljLCBjYWxsYmFjayk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyOiBhbnkpOiB2b2lkIHtcbiAgb2ZmKGxpc3RlbmVyKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBoYW5kbGVzQW5ub3VuY2VtZW50cyxcbiAgaGFuZGxlc0NoYXQsXG4gIGhhbmRsZXNDaGFyYWN0ZXIsXG4gIGhhbmRsZXNFbmVteVRhcmdldCxcbiAgaGFuZGxlc0ZyaWVuZGx5VGFyZ2V0LFxuICBoYW5kbGVzQ29udHJvbEdhbWUsXG4gIGhhbmRsZXNDb250cm9sR2FtZVNjb3JlLFxuICBvbixcbiAgb2ZmLFxuICBhZGRMaXN0ZW5lcixcbiAgcmVtb3ZlTGlzdGVuZXJcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4vIn0=
