/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _constantsChannelId = require('./constants/channelId');

var _constantsChannelId2 = _interopRequireDefault(_constantsChannelId);

var defaults = {
    // CSE API - for servers ect
    cseApiUrl: 'http://api.citystateentertainment.com',
    cseApiPort: 8001,
    // GAME API - for server info, this will be merged into the single
    // api source in the future.
    hatcheryApiUrl: 'https://hatchery.camelotunchained.com',
    hatcheryApiPort: 8000,
    wyrmlingApiUrl: 'https://wyrmling.camelotunchained.com',
    wyrmlingApiPort: 8000,
    // SAMPLE API TOKEN
    // TODO: replace loginToken with API KEY system
    apiToken: '1234567890',
    // Working Channel - defaults to hatchery
    channelId: _constantsChannelId2['default'].HATCHERY
};

var CoreSettings = function CoreSettings(channel, token) {
    _classCallCheck(this, CoreSettings);

    this.cseApiUrl = defaults.cseApiUrl;
    this.cseApiPort = defaults.cseApiPort;
    this.hatcheryApiUrl = defaults.hatcheryApiUrl;
    this.hatcheryApiPort = defaults.hatcheryApiPort;
    this.wyrmlingApiUrl = defaults.wyrmlingApiUrl;
    this.wyrmlingApiPort = defaults.wyrmlingApiPort;
    this.apiToken = defaults.apiToken;
    this.channelId = defaults.channelId;
    this.channelId = channel || defaults.channelId;
    this.apiToken = token || defaults.apiToken;
};

exports['default'] = CoreSettings;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRzL0NvcmVTZXR0aW5ncy50cyJdLCJuYW1lcyI6WyJDb3JlU2V0dGluZ3MiLCJDb3JlU2V0dGluZ3MuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztrQ0FNc0IsdUJBQXVCOzs7O0FBRTdDLElBQU0sUUFBUSxHQUFHOztBQUVmLGFBQVMsRUFBRSx1Q0FBdUM7QUFDbEQsY0FBVSxFQUFFLElBQUk7OztBQUloQixrQkFBYyxFQUFFLHVDQUF1QztBQUN2RCxtQkFBZSxFQUFFLElBQUk7QUFDckIsa0JBQWMsRUFBRSx1Q0FBdUM7QUFDdkQsbUJBQWUsRUFBRSxJQUFJOzs7QUFJckIsWUFBUSxFQUFFLFlBQVk7O0FBR3RCLGFBQVMsRUFBRSxnQ0FBVSxRQUFRO0NBQzlCLENBQUM7O0lBRUYsWUFBQSxHQVVFQSxTQVZGLFlBQUEsQ0FVY0EsT0FBa0JBLEVBQUVBLEtBQWFBLEVBQUFBOzBCQVYvQyxZQUFBOztBQUNTQyxRQUFBQSxDQUFBQSxTQUFTQSxHQUFXQSxRQUFRQSxDQUFDQSxTQUFTQSxDQUFDQTtBQUN2Q0EsUUFBQUEsQ0FBQUEsVUFBVUEsR0FBV0EsUUFBUUEsQ0FBQ0EsVUFBVUEsQ0FBQ0E7QUFDekNBLFFBQUFBLENBQUFBLGNBQWNBLEdBQVdBLFFBQVFBLENBQUNBLGNBQWNBLENBQUNBO0FBQ2pEQSxRQUFBQSxDQUFBQSxlQUFlQSxHQUFXQSxRQUFRQSxDQUFDQSxlQUFlQSxDQUFDQTtBQUNuREEsUUFBQUEsQ0FBQUEsY0FBY0EsR0FBV0EsUUFBUUEsQ0FBQ0EsY0FBY0EsQ0FBQ0E7QUFDakRBLFFBQUFBLENBQUFBLGVBQWVBLEdBQVdBLFFBQVFBLENBQUNBLGVBQWVBLENBQUNBO0FBQ25EQSxRQUFBQSxDQUFBQSxRQUFRQSxHQUFXQSxRQUFRQSxDQUFDQSxRQUFRQSxDQUFDQTtBQUNyQ0EsUUFBQUEsQ0FBQUEsU0FBU0EsR0FBY0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0E7QUFHL0NBLFFBQUlBLENBQUNBLFNBQVNBLEdBQUdBLE9BQU9BLElBQUlBLFFBQVFBLENBQUNBLFNBQVNBLENBQUNBO0FBQy9DQSxRQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxLQUFLQSxJQUFJQSxRQUFRQSxDQUFDQSxRQUFRQSxDQUFDQTtDQUM1Q0E7O3FCQUdZLFlBQVkiLCJmaWxlIjoidHMvQ29yZVNldHRpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cDovL21vemlsbGEub3JnL01QTC8yLjAvLlxuICovXG5cbmltcG9ydCBjaGFubmVsSWQgZnJvbSAnLi9jb25zdGFudHMvY2hhbm5lbElkJztcblxuY29uc3QgZGVmYXVsdHMgPSB7XG4gIC8vIENTRSBBUEkgLSBmb3Igc2VydmVycyBlY3RcbiAgY3NlQXBpVXJsOiAnaHR0cDovL2FwaS5jaXR5c3RhdGVlbnRlcnRhaW5tZW50LmNvbScsXG4gIGNzZUFwaVBvcnQ6IDgwMDEsXG5cbiAgLy8gR0FNRSBBUEkgLSBmb3Igc2VydmVyIGluZm8sIHRoaXMgd2lsbCBiZSBtZXJnZWQgaW50byB0aGUgc2luZ2xlXG4gIC8vIGFwaSBzb3VyY2UgaW4gdGhlIGZ1dHVyZS5cbiAgaGF0Y2hlcnlBcGlVcmw6ICdodHRwczovL2hhdGNoZXJ5LmNhbWVsb3R1bmNoYWluZWQuY29tJyxcbiAgaGF0Y2hlcnlBcGlQb3J0OiA4MDAwLFxuICB3eXJtbGluZ0FwaVVybDogJ2h0dHBzOi8vd3lybWxpbmcuY2FtZWxvdHVuY2hhaW5lZC5jb20nLFxuICB3eXJtbGluZ0FwaVBvcnQ6IDgwMDAsXG5cbiAgLy8gU0FNUExFIEFQSSBUT0tFTlxuICAvLyBUT0RPOiByZXBsYWNlIGxvZ2luVG9rZW4gd2l0aCBBUEkgS0VZIHN5c3RlbVxuICBhcGlUb2tlbjogJzEyMzQ1Njc4OTAnLFxuXG4gIC8vIFdvcmtpbmcgQ2hhbm5lbCAtIGRlZmF1bHRzIHRvIGhhdGNoZXJ5XG4gIGNoYW5uZWxJZDogY2hhbm5lbElkLkhBVENIRVJZLFxufTtcblxuY2xhc3MgQ29yZVNldHRpbmdzIHtcbiAgcHVibGljIGNzZUFwaVVybDogc3RyaW5nID0gZGVmYXVsdHMuY3NlQXBpVXJsO1xuICBwdWJsaWMgY3NlQXBpUG9ydDogbnVtYmVyID0gZGVmYXVsdHMuY3NlQXBpUG9ydDtcbiAgcHVibGljIGhhdGNoZXJ5QXBpVXJsOiBzdHJpbmcgPSBkZWZhdWx0cy5oYXRjaGVyeUFwaVVybDtcbiAgcHVibGljIGhhdGNoZXJ5QXBpUG9ydDogbnVtYmVyID0gZGVmYXVsdHMuaGF0Y2hlcnlBcGlQb3J0O1xuICBwdWJsaWMgd3lybWxpbmdBcGlVcmw6IHN0cmluZyA9IGRlZmF1bHRzLnd5cm1saW5nQXBpVXJsO1xuICBwdWJsaWMgd3lybWxpbmdBcGlQb3J0OiBudW1iZXIgPSBkZWZhdWx0cy53eXJtbGluZ0FwaVBvcnQ7XG4gIHB1YmxpYyBhcGlUb2tlbjogc3RyaW5nID0gZGVmYXVsdHMuYXBpVG9rZW47XG4gIHB1YmxpYyBjaGFubmVsSWQ6IGNoYW5uZWxJZCA9IGRlZmF1bHRzLmNoYW5uZWxJZDtcblxuICBjb25zdHJ1Y3RvcihjaGFubmVsPzpjaGFubmVsSWQsIHRva2VuPzpzdHJpbmcpIHtcbiAgICB0aGlzLmNoYW5uZWxJZCA9IGNoYW5uZWwgfHwgZGVmYXVsdHMuY2hhbm5lbElkO1xuICAgIHRoaXMuYXBpVG9rZW4gPSB0b2tlbiB8fCBkZWZhdWx0cy5hcGlUb2tlbjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb3JlU2V0dGluZ3M7XG4iXSwic291cmNlUm9vdCI6Ii4uLyJ9
